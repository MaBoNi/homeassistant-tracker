services:
  backend:
    build: ./backend
    container_name: homeassistant-tracker-backend
    restart: unless-stopped
    ports:
      - "5171:5000"  # Backend API port
    environment:
      - DATABASE_URL=postgresql://postgres:your_password@homeassistant-tracker-db:5432/gps_tracker
      - HA_API_URL=http://your-home-assistant-url/api
      - HA_TOKEN=your_static_token
      - HA_USERS=john_doe,jane_doe,another_doer
      - DROP_DB_ON_START=False  # Set to True to recreate the DB on startup
      - TRACKER_APP_TOKEN=your_very_secret_static_token  # Remember to add this to the frontend also
    volumes:
      - ./backend:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5171/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build: ./frontend
    container_name: homeassistant-tracker-frontend
    restart: unless-stopped
    ports:
      - "5172:80"  # Frontend app port
    environment:
      - TRACKER_APP_TOKEN=your_very_secret_static_token  # Remember to add this to the backend also
      - BACKEND_API_URL=http://homeassistant-tracker-backend:5171
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      retries: 5

  db:
    image: postgres:13
    container_name: homeassistant-tracker-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=your_password
      - POSTGRES_DB=gps_tracker
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5

volumes:
  postgres_data: