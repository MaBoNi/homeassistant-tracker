name: Lint Checks

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

permissions:
  contents: read
  packages: write

jobs:
  pylint:
    runs-on: ubuntu-latest
    name: Run PyLint Checks
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install pylint
          pip install -r backend/requirements.txt

      - name: Run Python Linting (PyLint)
        run: |
          pylint backend --fail-under=8 -d R0401 | tee pylint_report.txt

  jshint:
    runs-on: ubuntu-latest
    name: Run JSHint Checks
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install JSHint for JavaScript Linting
        run: |
          sudo apt-get update && sudo apt-get install -y jshint

      - name: Run JavaScript Linting (JSHint)
        run: |
          jshint frontend/script.js --reporter=unix | tee jshint_report.txt
          JSHINT_ERRORS=$(grep -c "^[^:]*:[^:]*:[^:]*: " jshint_report.txt || echo "0")
          if [ "$JSHINT_ERRORS" -gt 5 ]; then
            echo "JSHint found too many errors ($JSHINT_ERRORS). Will fail the build."
            exit 1
          fi
